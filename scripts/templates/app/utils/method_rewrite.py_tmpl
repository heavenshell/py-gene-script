# -*- coding: utf-8 -*-
"""
    {{project}}.utils.method_rewrite
    {{separator}}

    see http://flask.pocoo.org/snippets/38/ more details.

    :copyright: (c) 2010 Armin Ronacher
    :license: Public Domain.
    :copyright: (c) {{year}} Shinya Ohyanagi, All rights reserved.
    :license: BSD, see LICENSE for more details.
"""
from werkzeug import url_decode
from werkzeug.formparser import parse_form_data
from werkzeug.wsgi import get_input_stream
try:
    from io import BytesIO
except ImportError:
    from cStringIO import StringIO as BytesIO


class MethodRewrite(object):
    def __init__(self, app, input_name='_method'):
        """
        Rewrite HTTP method.

        :param app: Flask object
        :param input_name: Hidden tag name
        """
        self.app = app.wsgi_app
        self.input_name = input_name

    def __call__(self, environ, start_response):
        """
        Callable method.

        :param environ:
        :param start_response:
        """
        if self.input_name in environ.get('QUERY_STRING', ''):
            args = url_decode(environ['QUERY_STRING'])
            method = args.get(self.input_name)
            if method:
                method = method.encode('ascii', 'replace')
                environ['REQUEST_METHOD'] = method
        else:
            if environ['REQUEST_METHOD'].upper() == 'POST':
                environ['wsgi.input'] = stream = \
                    BytesIO(get_input_stream(environ).read())
                formdata = parse_form_data(environ)[1]
                stream.seek(0)

                method = formdata.get('_method', '').upper()
                if method in ('GET', 'POST', 'PUT', 'DELETE', 'PATCH'):
                    environ['REQUEST_METHOD'] = method

        return self.app(environ, start_response)
